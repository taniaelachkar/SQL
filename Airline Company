# List the passengers' information ordered by passenger name
SELECT * FROM PASSENGERS ORDER BY NAME;

# Show the origin, destination, and distance of the routes that cover a distance greater than 500 km and order the output by distance
SELECT ORIGIN,DESTINATION,DISTANCE FROM ROUTES WHERE DISTANCE>500 
ORDER BY DISTANCE;

# Show the route information of flights with 'MADRID' as a destination and with a price higher than 700 euros
SELECT * FROM ROUTES WHERE DESTINATION='MADRID' AND PRICE>700;

# Which routes don't have any ticket associated with them? (which routes have never been sold on a ticket?)
SELECT ROUTES.ROUTE_CODE FROM ROUTES 
LEFT JOIN TICKETS ON ROUTES.ROUTE_CODE=TICKETS.ROUTE_CODE
WHERE TICKETS.ROUTE_CODE IS NULL;

# List the name of the passengers that have flown in March 2014
SELECT NAME,TICKETS.FLIGHT_DATE FROM PASSENGERS INNER JOIN TICKETS ON 
ID=PASSENGER_ID WHERE TICKETS.FLIGHT_DATE BETWEEN '2014-03-01' AND '2014-03-31';

# Which route has the greatest distance? (the longest route?)
SELECT * FROM ROUTES WHERE DISTANCE=(SELECT MAX(DISTANCE) FROM ROUTES);

# Obtain the passenger ID and the ticket ID of customers whose last name is SMITH
SELECT TICKETS.PASSENGER_ID,TICKETS.TICKET_ID,NAME FROM PASSENGERS 
INNER JOIN TICKETS ON ID=PASSENGER_ID 
WHERE NAME LIKE '%SMITH%'
GROUP BY TICKETS.PASSENGER_ID,TICKETS.TICKET_ID,NAME
ORDER BY NAME;

# List the name and the ticket ID of all the passengers who have bought a ticket associated with airplane 'NC76749'
SELECT PASSENGERS.NAME,TICKET_ID,AIRCRAFT_ID FROM TICKETS INNER JOIN PASSENGERS ON 
PASSENGER_ID=ID WHERE AIRCRAFT_ID='NC76749';

# For each route, obtain the number of tickets sold
SELECT ROUTE_CODE,COUNT(TICKET_ID) AS NUMBER_TICKETS_SOLD FROM TICKETS GROUP BY ROUTE_CODE;

# Show the route's information and the number of tickets sold for the shortest route
SELECT TICKETS.ROUTE_CODE,COUNT(TICKET_ID) AS NUMBER_TICKETS_SOLD,ROUTES.DISTANCE
FROM TICKETS INNER JOIN ROUTES ON TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE 
GROUP BY ROUTES.DISTANCE,TICKETS.ROUTE_CODE
ORDER BY ROUTES.DISTANCE ASC LIMIT 1;

# For the cheapest route, show the list of airplanes and the number of passengers who have flown on these airplanes
SELECT AIRCRAFT_ID,COUNT(TICKET_ID) AS NUMBER_PASSENGERS,
ROUTES.PRICE,TICKETS.ROUTE_CODE FROM TICKETS INNER JOIN ROUTES 
ON TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE 
WHERE ROUTES.PRICE=(SELECT MIN(PRICE) FROM ROUTES)
GROUP BY AIRCRAFT_ID,ROUTES.PRICE,TICKETS.ROUTE_CODE;

# For each passenger who has a telephone number from Madrid (starts with 91), obtain the number of tickets bought by that passenger
# as well as the number of distinct routes flown
SELECT PASSENGERS.ID,COUNT(TICKETS.TICKET_ID) AS NUMBER_TICKETS_BOUGHT,
COUNT(DISTINCT TICKETS.ROUTE_CODE) AS NUMBER_DISTINCT_ROUTES_FLOWN
FROM PASSENGERS INNER JOIN TICKETS ON PASSENGERS.ID=TICKETS.PASSENGER_ID
WHERE PASSENGERS.TELEPHONE LIKE '91%' GROUP BY PASSENGERS.ID;

# For the aircrafts with the greatest number of seats, obtain the number of tickets sold for these airplanes for each route
SELECT TICKETS.ROUTE_CODE,COUNT(TICKETS.TICKET_ID) AS NUMBER_TICKETS_SOLD
FROM AIRPLANES INNER JOIN TICKETS 
ON AIRPLANES.AIRCRAFT_REGISTRATION=TICKETS.AIRCRAFT_ID
WHERE AIRPLANES.SEATS=(SELECT MAX(AIRPLANES.SEATS) FROM AIRPLANES)
GROUP BY TICKETS.ROUTE_CODE;

# For each passenger and each day, obtain the number of different routes that have been flown
SELECT PASSENGER_ID,FLIGHT_DATE,COUNT(DISTINCT TICKETS.ROUTE_CODE) AS NUMBER_DIFF_ROUTES
FROM TICKETS
GROUP BY PASSENGER_ID,FLIGHT_DATE LIMIT 20;

# For routes longer than 1000 km, obtain the average number of tickets sold to a passenger for each route and flying date
SELECT (COUNT(*)/COUNT(DISTINCT PASSENGER_ID)) AS AVG_TICKETS_PASSENGER,
TICKETS.ROUTE_CODE,FLIGHT_DATE,ROUTES.DISTANCE
FROM TICKETS INNER JOIN ROUTES ON TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE
GROUP BY TICKETS.ROUTE_CODE,FLIGHT_DATE,ROUTES.DISTANCE
HAVING ROUTES.DISTANCE>1000 LIMIT 20;

# For routes shorter than 1000 km, obtain, for each origin and destination, the average, the maximum, and the minimum price of the route
SELECT ROUND(AVG(PRICE),2) AS AVG_PRICE,MAX(PRICE) AS MAX_PRICE,
MIN(PRICE) AS MIN_PRICE,ORIGIN,DESTINATION,DISTANCE FROM ROUTES
WHERE DISTANCE<1000
GROUP BY ORIGIN,DESTINATION,DISTANCE;

# For each route and flying data, how many tickets were sold for the routes flown in the past 30 days?
SELECT COUNT(TICKET_ID) AS NUMBER_TICKETS_SOLD,TICKETS.ROUTE_CODE,
FLIGHT_DATE FROM TICKETS
WHERE (DAYS(CURRENT DATE) - DAYS(FLIGHT_DATE))<=30
GROUP BY TICKETS.ROUTE_CODE,FLIGHT_DATE;

# Show all routes and dates where the average number of tickets sold to a passenger is greater than 1
SELECT TICKETS.ROUTE_CODE,FLIGHT_DATE FROM TICKETS 
GROUP BY TICKETS.ROUTE_CODE,FLIGHT_DATE
HAVING (COUNT(TICKET_ID)/COUNT(DISTINCT PASSENGER_ID))>1; 

# Show the passengers' information for those passengers who bought the greatest number of tickets
SELECT ID,NAME,BIRTH_DATE,TELEPHONE,COUNT(TICKETS.TICKET_ID) AS NUMBER_OF_TICKETS
FROM PASSENGERS 
INNER JOIN TICKETS ON ID=PASSENGER_ID 
GROUP BY ID,NAME,BIRTH_DATE,TELEPHONE
HAVING COUNT(TICKETS.TICKET_ID) >= ALL (SELECT COUNT(TICKETS.TICKET_ID)
FROM TICKETS,PASSENGERS WHERE ID=PASSENGER_ID
GROUP BY ID,NAME,BIRTH_DATE,TELEPHONE);

# Obtain the route and date with the highest number of tickets sold
SELECT TICKETS.ROUTE_CODE,FLIGHT_DATE,COUNT(TICKET_ID)
FROM TICKETS GROUP BY TICKETS.ROUTE_CODE,FLIGHT_DATE
HAVING COUNT(TICKET_ID) >= ALL (SELECT COUNT(TICKET_ID)
FROM TICKETS GROUP BY TICKETS.ROUTE_CODE,FLIGHT_DATE);

# What is the build date of the airplanes that have flown in 2014? 
SELECT AIRCRAFT_REGISTRATION,BUILD_DATE,TICKETS.FLIGHT_DATE FROM AIRPLANES 
INNER JOIN TICKETS ON AIRCRAFT_REGISTRATION=AIRCRAFT_ID
WHERE TICKETS.FLIGHT_DATE BETWEEN '2014-01-01' AND '2014-12-31'
GROUP BY AIRCRAFT_REGISTRATION,BUILD_DATE,TICKETS.FLIGHT_DATE;

# How many passengers born in the 1970s have flown to Paris? 
SELECT COUNT(PASSENGER_ID) AS NUMBER_PASSENGERS
FROM TICKETS,PASSENGERS,ROUTES WHERE TICKETS.PASSENGER_ID=PASSENGERS.ID
AND TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE
AND PASSENGERS.BIRTH_DATE BETWEEN '1970-01-01' AND '1979-12-31'
AND UPPER(ROUTES.DESTINATION)='PARIS'; 

# What is the telephone number of the oldest passenger?
SELECT NAME,BIRTH_DATE,TELEPHONE FROM PASSENGERS
GROUP BY NAME,BIRTH_DATE,TELEPHONE 
HAVING BIRTH_DATE=(SELECT MIN(BIRTH_DATE) FROM PASSENGERS);

# How many airplanes have more than 300 seats and tickets more expensive than 1000 euros? 
SELECT COUNT(DISTINCT AIRCRAFT_ID) AS NUMBER_PLANES
FROM TICKETS,AIRPLANES,ROUTES WHERE AIRCRAFT_ID=AIRCRAFT_REGISTRATION 
AND TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE 
AND AIRPLANES.SEATS>300 AND ROUTES.PRICE>1000;

# Find the tickets associated to all the flights to Toronto in airplanes built before 2010 for passengers born after January 1st, 2000?
SELECT TICKET_ID,TICKETS.ROUTE_CODE,ROUTES.DESTINATION,AIRPLANES.BUILD_DATE,
PASSENGERS.BIRTH_DATE FROM TICKETS,ROUTES,AIRPLANES,PASSENGERS 
WHERE TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE AND AIRCRAFT_ID=AIRCRAFT_REGISTRATION
AND PASSENGER_ID=ID 
AND UPPER(ROUTES.DESTINATION)='TORONTO' AND AIRPLANES.BUILD_DATE<'2010-01-01'
AND PASSENGERS.BIRTH_DATE>'2000-01-01'
GROUP BY TICKET_ID,TICKETS.ROUTE_CODE,ROUTES.DESTINATION,AIRPLANES.BUILD_DATE,
PASSENGERS.BIRTH_DATE;

# Obtain the routes that have a price lower than the average price of all the routes with the same origin
SELECT ROUTES.ORIGIN,ROUTES.PRICE,T1.AVG_PRICE FROM ROUTES 
INNER JOIN (SELECT ORIGIN,AVG(PRICE) AS AVG_PRICE
FROM ROUTES GROUP BY ORIGIN) AS T1 
ON ROUTES.ORIGIN=T1.ORIGIN
WHERE ROUTES.PRICE<T1.AVG_PRICE;

# For each origin, how many tickets have been sold that cost more than 300 euros?
SELECT ORIGIN,COUNT(TICKETS.TICKET_ID) AS NUMBER_TICKETS_SOLD FROM ROUTES 
INNER JOIN TICKETS ON ROUTES.ROUTE_CODE=TICKETS.ROUTE_CODE 
WHERE PRICE>300
GROUP BY ORIGIN;

# What is the airline's revenue?
SELECT SUM(PRICE) AS TOTAL_EARNED FROM ROUTES 
INNER JOIN TICKETS ON ROUTES.ROUTE_CODE=TICKETS.ROUTE_CODE;

# List the price of each ticket, showing the most expensive one first
SELECT TICKET_ID,ROUTES.PRICE FROM TICKETS INNER JOIN ROUTES 
ON TICKETS.ROUTE_CODE=ROUTES.ROUTE_CODE 
GROUP BY TICKET_ID,ROUTES.PRICE
ORDER BY ROUTES.PRICE DESC LIMIT 20;

# Obtain the name and telephone number of the passengers who flew on route R7203 on December 28th, 2015 in planes with more than 300 seats
SELECT NAME,TELEPHONE FROM PASSENGERS,TICKETS,AIRPLANES
WHERE AIRPLANES.AIRCRAFT_REGISTRATION=TICKETS.AIRCRAFT_ID
AND TICKETS.PASSENGER_ID=PASSENGERS.ID
AND AIRPLANES.SEATS>300
AND TICKETS.ROUTE_CODE='R7203'
AND TICKETS.FLIGHT_DATE='2005-12-28';
